name: Release Go Binary

on:
  release:
    types: [created]

permissions:
  contents: write
  packages: write

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64, darwin/amd64, darwin/arm64
        goos: [linux, windows, darwin]
        goarch: ["386", amd64, arm64]
        exclude:
          - goarch: "386"
            goos: darwin
          - goarch: arm64
            goos: windows
    steps:
      - uses: actions/checkout@v4
      - uses: wangyoucao577/go-release-action@v1
        with:
          binary_name: "tforganize"
          extra_files: LICENSE README.md
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goarch: ${{ matrix.goarch }}
          goos: ${{ matrix.goos }}
          goversion: "https://dl.google.com/go/go1.20.4.linux-amd64.tar.gz"
          pre_command: make configure
  docker:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: pre-step
        shell: bash
        run: echo "release-version=$(echo ${GITHUB_REF:10})" >> $GITHUB_OUTPUT
      - name: Publish to Registry
        uses: elgohr/Publish-Docker-Github-Action@v5
        with:
          name: dthagard/tforganize/tforganize
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: ghcr.io
          tags: "latest,${{ steps.pre-step.outputs.release-version }}"
          username: ${{ github.actor }}
